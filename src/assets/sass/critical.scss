/* STYLES FOR ABOVE THE FOLD */

/*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0em) {
  #hero {
    font-family: 'Roboto', 'Arial', sans-serif;
    /* Centers button */
    text-align: center;
    /* changes on tablet */
    padding: 0 calc(16 / 16 * 1rem);
    padding-bottom: calc(100 / 16 * 1rem);
    position: relative;
    z-index: 1;
    /* prevents overflow from the lines extending past the screen width */
    overflow: hidden;

    .cs-picture {
      /* Background Image */
      width: 100%;
      height: 100%;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -2;

      &:before {
        /* Black Color Overlay */
        content: '';
        width: 100%;
        height: 100%;
        background: #000;
        opacity: 0.7;
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        z-index: 1;
        /* prevents the cursor from interacting with it */
        pointer-events: none;
      }

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        /* Makes image act like a background-image */
        object-fit: cover;
      }
    }

    .cs-container {
      width: 100%;
      max-width: calc(1280 / 16 * 1em);
      /* we put the padding top and bottom on the container instead of #Hero so the pseudo element lines go to the top and bottom of the section */
      /* 144px - 280px - leaving extra space for the navigation */
      /* changes on tablet */
      padding: clamp(9em, 25.95vw, 17.5em) 0;
      margin: auto;
      position: relative;

      &:before {
        /* Left Line */
        content: '';
        width: 1px;
        height: 100%;
        background: -moz-linear-gradient(
          top,
          rgba(250, 251, 252, 0.5) 0%,
          rgba(250, 251, 252, 0) 100%
        ); /* FF3.6-15 */
        background: -webkit-linear-gradient(
          top,
          rgba(250, 251, 252, 0.5) 0%,
          rgba(250, 251, 252, 0) 100%
        ); /* Chrome10-25,Safari5.1-6 */
        opacity: 1;
        position: absolute;
        display: block;
        top: 0;
        left: 0;
      }
    }

    .cs-flex-group {
      /* 60px - 220px */
      margin-bottom: clamp(3.75em, 15.5vw, 13.75em);
      margin: auto;
      width: 80vw;
      /* 464px - 562px */
      max-width: clamp(29em, 60vw, 35.125em);
      display: flex;
      align-items: flex-start;
      justify-content: center;
      flex-wrap: wrap;
      box-sizing: border-box;
    }

    .cs-topper {
      text-align: center;
      margin-bottom: calc(16 / 16 * 1rem);
      color: var(--primary);
    }

    .cs-title {
      text-align: center;
      width: 100%;
      color: var(--bodyTextColorWhite);
    }

    .cs-text {
      text-align: center;
      /* 32px - 40px */
      margin: 0 auto clamp(2rem, 4vw, 2.5rem) 0;
      /* 40px - 48px */
      margin-bottom: clamp(2.5rem, 4vw, 3rem);
      color: var(--bodyTextColorWhite);
    }

    .cs-button-solid {
      line-height: clamp(2.875em, 5.5vw, 3.5em);
      height: initial;
      margin-bottom: calc(16 / 16 * 1rem);
    }

    .cs-button-transparent {
      font-size: calc(16 / 16 * 1rem);
      /* 46px - 56px */
      line-height: clamp(2.875em, 5.5vw, 3.5em);
      width: calc(180 / 16 * 1rem);
      /* 46px - 56px */
      height: clamp(2.875em, 5.5vw, 3.5em);
      text-decoration: none;
      font-weight: 700;
      margin: 0 calc(8 / 16 * 1rem);
      color: #fff;
      padding: 0;
      background-color: transparent;
      border: 1px solid var(--bodyTextColorWhite);
      border-radius: var(--radius-8);
      box-sizing: border-box;
      display: inline-flex;
      justify-content: center;
      align-items: center;
      position: relative;
      z-index: 1;

      &:before {
        content: '';
        position: absolute;
        display: block;
        background: var(--secondaryLight);
        border-radius: var(--radius-8);
        opacity: 1;
        /* so it sits on top of the border */
        top: -1px;
        left: -1px;
        right: -1px;
        bottom: -1px;
        z-index: -1;
        transform-origin: left;
        /* this is what creates the grow affect on hover */
        transform: scaleX(0);
        transition: transform 0.3s;
      }

      &:hover {
        &:before {
          transform: scaleX(1);
        }
      }

      .cs-img {
        display: block;
        margin-right: calc(12 / 16 * 1rem);
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48em) {
  #hero {
    /* 32px - 40px */
    padding: 0 clamp(2em, 5vw, 2.5em);

    .cs-container {
      padding: clamp(7em, 27.95vw, 17.5em) 0 clamp(9em, 30.95vw, 23.5em) 0;
      &:after {
        /* Right Line */
        content: '';
        width: 1px;
        height: 100%;
        background: -moz-linear-gradient(
          top,
          rgba(250, 251, 252, 0) 0%,
          rgba(250, 251, 252, 0.5) 100%
        ); /* FF3.6-15 */
        background: -webkit-linear-gradient(
          top,
          rgba(250, 251, 252, 0) 0%,
          rgba(250, 251, 252, 0.5) 100%
        ); /* Chrome10-25,Safari5.1-6 */
        opacity: 1;
        position: absolute;
        display: block;
        top: 0;
        right: 0;
      }
    }

    .cs-button-solid {
      margin-bottom: 0;
      margin-right: calc(20 / 16 * 1rem);
    }
  }
}

/* Desktop Parallax Effect - 1300px */
@media only screen and (min-width: 81.25em) {
  #hero {
    background: url('/assets/images/landing.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    /* creates parallax effect on background image */
    background-attachment: fixed;
  }
}

/* Dark Mode */
@media only screen and (min-width: 0em) {
  body.dark-mode {
    #hero {
      .cs-background {
        &:before {
          opacity: 0.8;
        }
      }
    }
  }
}

/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile */
@media only screen and (min-width: 0em) {
  .services {
    border-radius: calc(5 / 16 * 1em);
    margin: auto;
    margin-top: calc(-167 / 16 * 1em);
    position: relative;
    z-index: 100;
    background: #fff;
    width: 90%;
    max-width: calc(1320 / 16 * 1em);
    padding: calc(50 / 16 * 1em) calc(20 / 16 * 1em);
    border-top: calc(6 / 16 * 1em) solid var(--primary);
    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.05);
    margin-bottom: calc(50 / 16 * 1em);
    .card {
      display: block;
      width: 100%;
      max-width: calc(357 / 16 * 1em);
      margin: auto;
      margin-bottom: calc(50 / 16 * 1em);
      &:last-of-type {
        margin-bottom: 0;
      }

      picture {
        background: var(--primary);
        width: calc(88 / 16 * 1em);
        height: calc(88 / 16 * 1em);
        display: flex;
        justify-content: center;
        align-items: center;
        margin: auto;
        margin-bottom: calc(23 / 16 * 1em);
        border-radius: 50%;

        img {
          width: calc(48 / 16 * 1em);
          height: calc(48 / 16 * 1em);
        }
      }
      h2 {
        text-align: center;
        font-size: calc(32 / 16 * 1em);
        line-height: 27/20em;
        font-weight: 700;
        color: #1a1a1a;
        margin-bottom: 13/20em;
      }
      p {
        text-align: center;
        line-height: 24/18em;
        width: 100%;
        opacity: 0.7;
      }
    }
  }
}

/* Inbetween */
@media only screen and (min-width: 768px) {
  .services {
    font-size: min(1.8vw, 1em);
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    width: 98%;

    .card {
      margin: 0;
      max-width: calc(325 / 16 * 1em);
    }
  }
}

/* Large Desktop */
@media only screen and (min-width: 1300px) {
  .services {
    padding: calc(50 / 16 * 1em) calc(80 / 16 * 1em);

    .card {
      max-width: calc(357 / 16 * 1em);
    }
  }
}

/* Dark mode */
@media only screen and (min-width: 0em) {
  body.dark-mode {
    #services {
      background: var(--medium);

      picture {
        background: var(--primaryDark);
      }

      h2 {
        color: #fff;
        font-weight: bold;
      }
    }
  }
}

/*-- -------------------------- -->
<---          Projects           -->
<--- -------------------------- -*/

/* Mobile - 360px - Contains hover animation */
@media only screen and (min-width: 0em) {
  /* Mobile - 360px */

  #projects {
    padding: var(--sectionPadding);

    .cs-container {
      width: 100%;
      /* changes at 1280px at tablet */
      max-width: calc(550 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
    }

    .cs-text {
      font-size: var(--bodyFontSize);
      line-height: 1.5em;
      text-align: inherit;
      width: 100%;
      max-width: calc(650 / 16 * 1rem);
      margin: 0;
      color: var(--bodyTextColor);
    }

    .cs-card-group {
      width: 100%;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      justify-content: space-evenly;
      align-items: stretch;
      /* 16px - 20px */
      column-gap: clamp(1rem, 1.5vw, 1.25rem);
      /* 24px - 60px */
      row-gap: clamp(1.5rem, 5vw, 3.75rem);
    }

    .cs-item {
      list-style: none;
      width: 100%;
      max-width: calc(360 / 16 * 1rem);
      /* changes at desktop */
      padding-top: calc(144 / 16 * 1rem);
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: stretch;
      &:hover {
        .cs-picture {
          img {
            transform: scale(1.2);
            opacity: 0.4;
          }
        }

        .cs-flex {
          &:before {
            opacity: 1;
          }
        }
      }
    }

    .cs-picture {
      width: 100%;
      /* changes at desktop */
      height: calc(250 / 16 * 1rem);
      border-radius: calc(8 / 16 * 1rem);
      background-color: var(--primary);
      /* clips the corners of the image */
      overflow: hidden;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        /* makes it behave like a background image */
        object-fit: cover;
        /* positions top of image to the top of the container */
        object-position: top;
        transition: transform 0.9s, opacity 0.5s;
      }
    }

    .cs-flex {
      text-align: center;
      width: 88%;
      padding: 0 calc(24 / 16 * 1rem) calc(24 / 16 * 1rem) calc(24 / 16 * 1rem);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      border: 1px solid #dad9e3;
      border-radius: calc(12 / 16 * 1rem);
      background-color: #fff;
      box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      position: relative;
      &:before {
        /* hover border box */
        content: '';
        background: transparent;
        /* prevents the mouse from interacting with it */
        pointer-events: none;
        border: 4px solid var(--primary);
        border-radius: calc(12 / 16 * 1rem);
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        opacity: 0;
        position: absolute;
        display: block;
        top: -1px;
        left: -1px;
        right: -1px;
        bottom: -1px;
        transition: opacity 0.5s;
      }
    }

    .cs-wrapper {
      /* 80px - 120px */
      width: clamp(5rem, 9.2vw, 7.5rem);
      height: clamp(5rem, 9.2vw, 7.5rem);
      /* 20px - 24px */
      margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
      /* we use the same clamp value for height & width, but multiple by -.5 so it will be a negative value, and be half of the height.  Negative margins pull things toward the element so they overlap them, in this case we want the .cs-wrapper to overlap .cs-flex by half its height, so we use the same clamp for height and half it for the margin top value */
      margin-top: calc(clamp(5rem, 9.2vw, 7.5rem) * -0.5);
      border-radius: 50%;
      border: 4px solid var(--primary);
      background-color: #fff;
      /* prevents border from affecting height and width */
      box-sizing: border-box;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      z-index: 10;
    }

    .cs-icon {
      /* 48px - 64px */
      width: clamp(3rem, 4.3vw, 4rem);
      height: auto;
      display: block;
    }

    .cs-h3 {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 1.9vw, 1.5625rem);
      line-height: 1.2em;
      font-weight: 700;
      margin: 0 0 calc(8 / 16 * 1rem) 0;
      color: var(--headerColor);
    }

    .cs-item-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      font-weight: 400;
      /* 20px - 24px */
      margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
      color: var(--bodyTextColor);
    }

    .cs-link {
      /* 16px - 20px */
      font-size: clamp(1rem, 1.5vw, 1.25rem);
      line-height: 1.5em;
      font-weight: 700;
      text-transform: uppercase;
      text-decoration: none;
      margin: 0;
      color: var(--primary);
      display: inline-block;
      position: relative;

      &:hover {
        &:before {
          width: 100%;
        }
      }

      &:before {
        /* animated underline */
        content: '';
        width: 0%;
        height: 3px;
        background: currentColor;
        opacity: 1;
        position: absolute;
        display: block;
        bottom: calc(-2 / 16 * 1rem);
        left: 0;
        transition: width 0.3s;
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #projects {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
    }

    .cs-card-group {
      flex-direction: row;
    }

    .cs-item {
      width: 47%;
    }
  }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #projects {
    .cs-card-group {
      flex-wrap: nowrap;
    }
    .cs-item {
      width: 100%;
      /* 144px - 274px */
      padding-top: clamp(9rem, 17.5vw, 17.125rem);
    }

    .cs-picture {
      /* 224px - 428px */
      height: clamp(14rem, 28vw, 26.75rem);
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #projects {
      .cs-topper {
        color: var(--primaryLight);
      }

      .cs-title {
        color: var(--bodyTextColorWhite);
      }

      .cs-text {
        color: var(--bodyTextColorWhite);
        opacity: 0.8;
      }

      .cs-flex,
      .cs-wrapper {
        background-color: var(--medium);
      }

      .cs-icon {
        filter: grayscale(1) brightness(2000%);
      }

      .cs-h3,
      .cs-item-text {
        color: var(--bodyTextColorWhite);
      }

      .cs-link {
        color: var(--primaryLight);
      }
    }
  }
}

/*-- -------------------------- -->
<---          Reviews           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #reviews-1088 {
    padding: var(--sectionPadding);
    background-color: #f7f7f7;

    .cs-container {
      width: 100%;
      /* changes to 1280px at tablet */
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      margin-right: auto;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
    }

    .cs-topper {
      font-size: var(--topperFontSize);
      line-height: 1.2em;
      text-transform: uppercase;
      text-align: inherit;
      letter-spacing: 0.1em;
      font-weight: 700;
      color: var(--primary);
      margin-bottom: calc(4 / 16 * 1rem);
      display: block;
    }

    .cs-title {
      font-size: var(--headerFontSize);
      font-weight: 900;
      line-height: 1.2em;
      text-align: inherit;
      max-width: calc(700 / 16 * 1rem);
      margin: 0 0 calc(16 / 16 * 1rem) 0;
      color: var(--headerColor);
      position: relative;
    }

    .cs-text {
      font-size: var(--bodyFontSize);
      line-height: 1.5em;
      text-align: inherit;
      width: 100%;
      max-width: calc(650 / 16 * 1rem);
      margin: 0;
      color: var(--bodyTextColor);
    }

    .cs-title {
      /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
      max-width: 25ch;
      margin: 0;
    }

    .cs-card-group {
      margin: 0;
      padding: 0;
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      align-items: stretch;
      /* 16px - 20px */
      gap: clamp(1rem, 2vw, 1.25rem);
    }

    .cs-item {
      list-style: none;
      padding: 0;
      /* 46px - 56px, pushes up by the same amount the cs-image margin-top pulld it up for proper spacing */
      margin: clamp(2.5rem, 5vw, 3.5rem) 0 0;
      background-color: #fff;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      grid-column: span 12;
      position: relative;
      border-radius: var(--radius-8);

      &:hover {
        .cs-flex {
          background-color: var(--primary);
        }
      }
    }

    .cs-icon {
      width: calc(52 / 16 * 1rem);
      height: auto;
      display: block;
      position: absolute;
      /* 24px - 36px, same values as the padding on cs-item-text */
      top: clamp(1.5rem, 3vw, 2.25rem);
      right: clamp(1.5rem, 3vw, 2.25rem);
      filter: invert(27%) sepia(25%) saturate(5704%) hue-rotate(232deg)
        brightness(89%) contrast(96%);
    }

    .cs-image {
      /* 80px - 112px */
      width: clamp(5rem, 10vw, 7rem);
      height: clamp(5rem, 10vw, 7rem);
      /* 40px - 56px, same growth rate as the cs-image */
      /* 24px - 36px marign left, same value as the padding on cs-item-text */
      margin: calc(clamp(2.5rem, 5vw, 3.5rem) * -1) 0 calc(36 / 16 * 1rem)
        clamp(1.25rem, 3vw, 2.25rem);
      border-radius: 50%;
      object-fit: cover;
      display: block;
    }

    .cs-item-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      text-align: left;
      margin: 0;
      /* 24px - 36px */
      padding: 0 clamp(1.5rem, 3vw, 2.25rem) clamp(1.25rem, 3vw, 2.25rem);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      color: var(--bodyTextColor);
    }

    .cs-flex {
      text-align: center;
      padding: calc(24 / 16 * 1rem);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      width: 100%;
      /* pushes up against the cs-item-text so if there's a different amount of content from the other cards, it will push down and stretch the card to fill the container vertically. This makes all the cards the same height no matter how much content each one has */
      margin-top: auto;
      background-color: #1a1a1a;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: calc(4 / 16 * 1rem);
      transition: background-color 0.3s;
      border-bottom-right-radius: var(--radius-8);
      border-bottom-left-radius: var(--radius-8);
    }

    .cs-name {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
      line-height: 1.2em;
      text-align: inherit;
      margin: 0;
      font-weight: 700;
      padding: 0;
      color: var(--bodyTextColorWhite);
    }

    .cs-desc {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 2.5vw, 1rem);
      line-height: 1.5em;
      text-align: inherit;
      margin: 0;
      padding: 0;
      color: var(--bodyTextColorWhite);
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #reviews-1088 {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
    }

    .cs-item {
      grid-column: span 6;
    }
  }
}
